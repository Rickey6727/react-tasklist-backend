'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.snake2camel = exports.camel2snake = exports.strFormat = exports.normalizeStyle = exports.getMonthCalendar = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                   * libralies for the DatePicker
                                                                                                                                                                                                                                                                   * @file
                                                                                                                                                                                                                                                                   */

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _config = require('./config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 指定した月のカレンダーを返してくれます
 * @param  {number} year  year
 * @param  {number} month month
 * @return {array<{day:number, month:number, active:boolean, weekday:string, isHoliday:boolean}>} day information object
 */
var getMonthCalendar = exports.getMonthCalendar = function getMonthCalendar(year, month) {
  var monthDays = [];
  var idx = (0, _moment2.default)([year, month - 1, 1]);
  idx.subtract(idx.weekday(), 'days').calendar();

  // 第1週から第6週までをイテレート
  for (var i = 0; i < 6; i++) {
    monthDays.push([]);
    // 日曜から土曜までをいてレート
    for (var j = 0; j < 7; j++) {
      monthDays[i].push({
        day: idx.date(),
        month: idx.month() + 1,
        year: idx.year(),
        active: idx.month() + 1 == month,
        weekday: _config2.default.weekLabels.en[idx.weekday()],
        isHoliday: _config2.default.holidays.indexOf(idx.format('YYYY-MM-DD')) > 0
      });
      idx.add(1, 'days');
    }
  }
  return monthDays;
};

/**
 * normalize style object
 * @param  {object} style normalizing style object
 * @return {object} normalized style object
 */
var normalizeStyle = exports.normalizeStyle = function normalizeStyle(style) {

  // acceptable pseudo class
  var pseudoClasses = ['hover', 'focus'];
  /**
   * check if is a prop is pseudo class
   * @param  {string}  prop propery. if isPseudoClass, it might be like :hover
   * @return {boolean}      result
   */
  var isPseudoClass = function isPseudoClass(prop) {
    return pseudoClasses.map(function (pseudoClass) {
      return ':' + pseudoClass;
    }).includes(prop);
  };

  var result = {};

  Object.keys(style).forEach(function (slug) {
    result[slug] = {};

    // prepare in case without those pseudo calsses
    pseudoClasses.map(function (pseudoClass) {
      return ':' + pseudoClass;
    }).forEach(function (prop) {
      if (!style[slug][prop]) {
        result[slug + prop] = _extends({}, style[slug], style[slug][prop]);
      }
    });

    // merge, flatten and spread nested properies
    var props = Object.keys(style[slug]);
    props.forEach(function (prop) {
      if (isPseudoClass(prop)) {
        result[slug + prop] = _extends({}, style[slug], style[slug][prop]);
      } else {
        result[slug][prop] = style[slug][prop];
      }
    });
  });

  // cleanup nested pseudo class
  Object.keys(result).forEach(function (slug) {
    Object.keys(result[slug]).forEach(function (prop) {
      if (isPseudoClass(prop)) {
        delete result[slug][prop];
      }
    });
  });

  return result;
};

/**
 * formatter
 * @param  {string} format str including {word}
 * @param  {object} args   give varables in { word: 'value' }
 * @return {string}        formatted text
 */
var strFormat = exports.strFormat = function strFormat(format, args) {
  return format.replace(/\{(\w+)\}/g, function (x, matched) {
    return args[matched];
  });
};

/**
 * convert camel case to snake case
 * @param  {string} camel lowerCamelCaseString
 * @return {string}       snake-case-string
 */
var camel2snake = exports.camel2snake = function camel2snake(camel) {
  return camel.replace(/[A-Z]/g, function (str) {
    return '-' + str.toLowerCase();
  });
};

/**
 * convert snake case to camel case
 * @param  {string} snake lowerCamelCaseString
 * @return {string}       snake-case-string
 */
var snake2camel = exports.snake2camel = function snake2camel(snake) {
  return snake.replace(/-[a-zA-Z]/g, function (str) {
    return str[1].toUpperCase();
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,